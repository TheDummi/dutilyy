{"version":3,"sources":["../src/models/Math.ts","../src/models/Random.ts","../src/models/Style.ts","../src/models/Catch.ts","../src/main.ts"],"names":["TextStyle","TextColor","BackgroundColor"],"mappings":"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","file":"main.cjs","sourcesContent":["/** @format */\n\nexport default new (class NewMath {\n\tpublic E: number;\n\tpublic LN10: number;\n\tpublic LN2: number;\n\tpublic LOG10E: number;\n\tpublic LOG2E: number;\n\tpublic PI: number;\n\tpublic SQRT1_2: number;\n\tpublic SQRT2: number;\n\n\tconstructor() {\n\t\tthis.E = Math.E;\n\n\t\tthis.LN10 = Math.LN10;\n\n\t\tthis.LN2 = Math.LN2;\n\n\t\tthis.LOG10E = Math.LOG10E;\n\n\t\tthis.LOG2E = Math.LOG2E;\n\n\t\tthis.PI = Math.PI;\n\n\t\tthis.SQRT1_2 = Math.SQRT1_2;\n\n\t\tthis.SQRT2 = Math.SQRT2;\n\t}\n\n\tpublic abs(number: number) {\n\t\treturn Math.abs(number);\n\t}\n\n\tpublic acos(number: number) {\n\t\treturn Math.acos(number);\n\t}\n\n\tpublic acosh(number: number) {\n\t\treturn Math.acosh(number);\n\t}\n\n\tpublic asin(number: number) {\n\t\treturn Math.asin(number);\n\t}\n\n\tpublic asinh(number: number) {\n\t\treturn Math.asinh(number);\n\t}\n\n\tpublic atan(number: number) {\n\t\treturn Math.atan(number);\n\t}\n\n\tpublic atan2(x: number, y: number) {\n\t\treturn Math.atan2(x, y);\n\t}\n\n\tpublic atanh(number: number) {\n\t\treturn Math.atanh(number);\n\t}\n\n\tpublic cbrt(number: number) {\n\t\treturn Math.cbrt(number);\n\t}\n\n\tpublic ceil(number: number) {\n\t\treturn Math.ceil(number);\n\t}\n\n\tpublic clz32(number: number) {\n\t\treturn Math.clz32(number);\n\t}\n\n\tpublic cos(number: number) {\n\t\treturn Math.cos(number);\n\t}\n\n\tpublic cosh(number: number) {\n\t\treturn Math.cosh(number);\n\t}\n\n\tpublic dif(...numbers: Array<number>) {\n\t\tif (numbers.length <= 0) return NaN;\n\t\telse return numbers.reduce((x, y) => (x -= y));\n\t}\n\n\tpublic exp(number: number) {\n\t\treturn Math.exp(number);\n\t}\n\n\tpublic expm1(number: number) {\n\t\treturn Math.clz32(number);\n\t}\n\n\tpublic floor(number: number) {\n\t\treturn Math.floor(number);\n\t}\n\n\tpublic fround(number: number) {\n\t\treturn Math.fround(number);\n\t}\n\n\tpublic hypot(number: number) {\n\t\treturn Math.hypot(number);\n\t}\n\n\tpublic imul(x: number, y: number) {\n\t\treturn Math.imul(x, y);\n\t}\n\n\tpublic log(number: number) {\n\t\treturn Math.log(number);\n\t}\n\n\tpublic log10(number: number) {\n\t\treturn Math.log10(number);\n\t}\n\n\tpublic log1p(number: number) {\n\t\treturn Math.log1p(number);\n\t}\n\n\tpublic log2(number: number) {\n\t\treturn Math.log2(number);\n\t}\n\n\tpublic max(...numbers: Array<number>) {\n\t\treturn Math.max(...numbers);\n\t}\n\n\tpublic min(...numbers: Array<number>) {\n\t\treturn Math.min(...numbers);\n\t}\n\n\tpublic pow(x: number, y: number) {\n\t\treturn Math.pow(x, y);\n\t}\n\n\tpublic precise(x: number, y: number) {\n\t\tlet z = '1';\n\n\t\twhile (y) {\n\t\t\tz += '0';\n\t\t\ty--;\n\t\t}\n\n\t\treturn Math.round(x * parseInt(z)) / parseInt(z);\n\t}\n\n\tpublic random(x?: number, y?: number) {\n\t\tif (x) {\n\t\t\tif (y === undefined) {\n\t\t\t\ty = x;\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t\treturn Math.floor(Math.random() * Math.floor(y) + x);\n\t\t} else return Math.random();\n\t}\n\n\tpublic round(number: number) {\n\t\treturn Math.round(number);\n\t}\n\n\tpublic shuffle(...numbers: Array<number>) {\n\t\tif (Array.isArray(numbers)) {\n\t\t\tconst array = [];\n\t\t\tnumbers = Array.from(numbers);\n\t\t\twhile (numbers.length > 0) {\n\t\t\t\tarray.push(numbers.splice(this.random(numbers.length), 1)[0]);\n\t\t\t}\n\t\t\treturn array;\n\t\t} else return NaN;\n\t}\n\n\tpublic sign(number: number) {\n\t\treturn Math.sign(number);\n\t}\n\n\tpublic sin(number: number) {\n\t\treturn Math.sin(number);\n\t}\n\n\tpublic sinh(number: number) {\n\t\treturn Math.sinh(number);\n\t}\n\n\tpublic sum(...numbers: Array<number>) {\n\t\tif (numbers.length <= 0) return NaN;\n\t\telse return numbers.reduce((x, y) => (x += y));\n\t}\n\n\tpublic sqrt(number: number) {\n\t\treturn Math.sqrt(number);\n\t}\n\n\tpublic tan(number: number) {\n\t\treturn Math.tan(number);\n\t}\n\n\tpublic tanh(number: number) {\n\t\treturn Math.tanh(number);\n\t}\n\n\tpublic trunc(number: number) {\n\t\treturn Math.trunc(number);\n\t}\n})();\n","/** @format */\n\nimport Math from './Math.js';\n\nexport default new (class Random {\n\tconstructor() {\n\t\tthis.number = this.number;\n\n\t\tthis.element = this.element;\n\t}\n\n\tnumber(min: number, max: number) {\n\t\tif (min === undefined) return Math.random(10);\n\t\telse return Math.random(min, max);\n\t}\n\n\telement(array: Array<unknown> | object) {\n\t\tif (Array.isArray(array)) {\n\t\t\treturn array[Math.random(array.length)];\n\t\t}\n\n\t\tif (typeof array == 'object') {\n\t\t\tconst random = Math.random(Object.keys(array).length);\n\t\t\treturn {\n\t\t\t\tobject: { [Object.keys(array)[random]]: Object.values(array)[random] },\n\t\t\t\tkey: Object.keys(array)[random],\n\t\t\t\tvalue: Object.values(array)[random],\n\t\t\t};\n\t\t} else return undefined;\n\t}\n})();\n","/** @format */\n\nexport enum TextStyle {\n\tBold = 1,\n\tVague = 2,\n\tCursive = 3,\n\tUnderLine = 4,\n\tTransparent = 8,\n\tStrike = 9,\n\tDoubleUnderline = 21,\n}\n\nexport enum TextColor {\n\tNone = 29,\n\tGrey = 30,\n\tRed = 31,\n\tGreen = 32,\n\tYellow = 33,\n\tBlue = 34,\n\tPurple = 35,\n\tCyan = 36,\n\tBlanche = 37,\n\tLightGrey = 90,\n\tLightRed = 91,\n\tLightGreen = 92,\n\tLightYellow = 93,\n\tLightBlue = 94,\n\tViolet = 95,\n\tTurquoise = 96,\n\tWhite = 97,\n}\n\nexport enum BackgroundColor {\n\tNone = 39,\n\tGrey = 40,\n\tRed = 41,\n\tGreen = 42,\n\tYellow = 43,\n\tBlue = 44,\n\tPurple = 45,\n\tCyan = 46,\n\tBlanche = 47,\n\tLightGrey = 100,\n\tLightRed = 101,\n\tLightGreen = 102,\n\tLightYellow = 103,\n\tLightBlue = 104,\n\tViolet = 105,\n\tTurquoise = 106,\n\tWhite = 107,\n}\n\nexport default new (class Style {\n\tTextStyle: typeof TextStyle;\n\tTextColor: typeof TextColor;\n\tBackgroundColor: typeof BackgroundColor;\n\n\tconstructor() {\n\t\tthis.TextStyle = TextStyle;\n\n\t\tthis.TextColor = TextColor;\n\n\t\tthis.BackgroundColor = BackgroundColor;\n\t}\n\n\ttitleCase(string: string, lowercase: boolean = false) {\n\t\tif (lowercase == true) string = string?.toString()?.toLowerCase();\n\t\treturn string\n\t\t\t?.toString()\n\t\t\t?.split(/ +/g)\n\t\t\t?.map((word) => word?.slice(0, 1).toUpperCase() + word?.slice(1))\n\t\t\t.join(' ');\n\t}\n\n\tpascalCase(string: string, lowercase: boolean = false) {\n\t\tif (lowercase == true) string = string?.toString()?.toLowerCase();\n\t\treturn string\n\t\t\t?.toString()\n\t\t\t?.split(/ +/g)\n\t\t\t?.map((word) => word?.slice(0, 1).toUpperCase() + word?.slice(1))\n\t\t\t.join('');\n\t}\n\n\tstringCase(string: string, lowercase: boolean = false) {\n\t\tif (lowercase == true) string = string?.toString()?.toLowerCase();\n\t\treturn string?.toString()?.charAt(0)?.toUpperCase() + string?.toString()?.slice(1);\n\t}\n\n\tphraseCase(string: string, lowercase: boolean = false) {\n\t\tif (lowercase == true) string = string?.toString()?.toLowerCase();\n\t\treturn string\n\t\t\t?.toString()\n\t\t\t?.split(/[!?.]/gi)\n\t\t\t.map((phrase) => phrase?.toString().charAt(0)?.toUpperCase() + phrase?.toString()?.slice(1))\n\t\t\t.join(' ');\n\t}\n\n\tlog(text: string, options: LogOptions) {\n\t\tconst styling = { color: '', style: '' };\n\n\t\tif (options?.color) styling.color = `\\u001b[${options.color}m`;\n\n\t\tif (options?.style) styling.style = `\\u001b[${options.style}m`;\n\n\t\treturn `${styling.color}${styling.style}${text}\\u001b[0;0m`;\n\t}\n})();\n\nexport interface LogOptions {\n\tstyle?: TextStyle;\n\tcolor?: BackgroundColor | TextColor;\n}\n","/** @format */\n\n/**\n * This function catches and handles errors from a synchronous operation.\n *\n * @template T - The type of the value to be processed.\n * @param {T} t - The value to catch errors from.\n * @returns {[undefined, T] | [Error, null]} - An array containing either:\n * - `undefined` and the original value `t`, if no error occurred.\n * - An `Error` object and `null`, if an error occurred during the operation.\n *\n * @example\n * ```typescript\n * const result = catchErrorSync(fetchDataFromAPI());\n * if (result[0]) {\n *   console.error('An error occurred:', result[0]);\n * } else {\n *   console.log('Data received:', result[1]);\n * }\n * ```\n */\nexport function catchErrorSync<T>(t: T): [undefined, T] | [Error, null] {\n\tif (!t) return [new Error('No value provided.'), null]; //-\n\n\ttry {\n\t\treturn [undefined, t];\n\t} catch (error) {\n\t\treturn [error as Error, null];\n\t}\n}\n\n/**\n * This function catches and handles errors from an asynchronous promise.\n *\n * @template T - The type of the promise's resolved value.\n * @param {Promise<T>} promise - The promise to catch errors from.\n * @returns {Promise<[undefined, T] | [Error, null]>} - A promise that resolves to either:\n * - An array containing `undefined` and the resolved value of the promise, if no error occurred.\n * - An array containing an `Error` object and `null`, if an error occurred during the promise execution.\n *\n * @example\n * ```typescript\n * const promise = fetch('https://api.example.com/data');\n * catchError(promise)\n *   .then(([error, data]) => {\n *     if (error) {\n *       console.error('An error occurred:', error);\n *     } else {\n *       console.log('Data received:', data);\n *     }\n *   });\n * ```\n */\nexport async function catchError<T>(promise: Promise<T>): Promise<[undefined, T] | [Error, null]> {\n\tif (!promise) return [new Error('No value provided.'), null];\n\n\treturn promise\n\t\t.then((data) => {\n\t\t\treturn [undefined, data] as [undefined, T];\n\t\t})\n\t\t.catch((error) => {\n\t\t\treturn [error as Error, null];\n\t\t});\n}\n","/** @format */\n\nimport Math from './models/Math.js';\nimport Random from './models/Random.js';\nimport Style from './models/Style.js';\nexport * from './models/Catch.js';\n\nexport default {\n\tMath,\n\tRandom,\n\tStyle,\n};\n\nexport { Math, Random, Style };\n"]}