{"version":3,"sources":["../src/models/Math.ts","../src/models/Random.ts","../src/models/Style.ts","../src/models/Catch.ts","../src/main.ts"],"names":["TextStyle","TextColor","BackgroundColor"],"mappings":"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","file":"main.cjs","sourcesContent":["export default new (class NewMath {\n    public E: number;\n    public LN10: number;\n    public LN2: number;\n    public LOG10E: number;\n    public LOG2E: number;\n    public PI: number;\n    public SQRT1_2: number;\n    public SQRT2: number;\n\n    constructor() {\n        this.E = Math.E;\n\n        this.LN10 = Math.LN10;\n\n        this.LN2 = Math.LN2;\n\n        this.LOG10E = Math.LOG10E;\n\n        this.LOG2E = Math.LOG2E;\n\n        this.PI = Math.PI;\n\n        this.SQRT1_2 = Math.SQRT1_2;\n\n        this.SQRT2 = Math.SQRT2;\n    }\n\n    public abs(number: number) {\n        return Math.abs(number);\n    }\n\n    public acos(number: number) {\n        return Math.acos(number);\n    }\n\n    public acosh(number: number) {\n        return Math.acosh(number);\n    }\n\n    public asin(number: number) {\n        return Math.asin(number);\n    }\n\n    public asinh(number: number) {\n        return Math.asinh(number);\n    }\n\n    public atan(number: number) {\n        return Math.atan(number);\n    }\n\n    public atan2(x: number, y: number) {\n        return Math.atan2(x, y);\n    }\n\n    public atanh(number: number) {\n        return Math.atanh(number);\n    }\n\n    public cbrt(number: number) {\n        return Math.cbrt(number);\n    }\n\n    public ceil(number: number) {\n        return Math.ceil(number);\n    }\n\n    public clz32(number: number) {\n        return Math.clz32(number);\n    }\n\n    public cos(number: number) {\n        return Math.cos(number);\n    }\n\n    public cosh(number: number) {\n        return Math.cosh(number);\n    }\n\n    public dif(...numbers: Array<number>) {\n        if (numbers.length <= 0) return NaN;\n        else return numbers.reduce((x, y) => (x -= y));\n    }\n\n    public exp(number: number) {\n        return Math.exp(number);\n    }\n\n    public expm1(number: number) {\n        return Math.clz32(number);\n    }\n\n    public floor(number: number) {\n        return Math.floor(number);\n    }\n\n    public fround(number: number) {\n        return Math.fround(number);\n    }\n\n    public hypot(number: number) {\n        return Math.hypot(number);\n    }\n\n    public imul(x: number, y: number) {\n        return Math.imul(x, y);\n    }\n\n    public log(number: number) {\n        return Math.log(number);\n    }\n\n    public log10(number: number) {\n        return Math.log10(number);\n    }\n\n    public log1p(number: number) {\n        return Math.log1p(number);\n    }\n\n    public log2(number: number) {\n        return Math.log2(number);\n    }\n\n    public max(...numbers: Array<number>) {\n        return Math.max(...numbers);\n    }\n\n    public min(...numbers: Array<number>) {\n        return Math.min(...numbers);\n    }\n\n    public pow(x: number, y: number) {\n        return Math.pow(x, y);\n    }\n\n    public precise(x: number, y: number) {\n        let z = '1';\n\n        while (y) {\n            z += '0';\n            y--;\n        }\n\n        return Math.round(x * parseInt(z)) / parseInt(z);\n    }\n\n    public random(x?: number, y?: number) {\n        if (x) {\n            if (y === undefined) {\n                y = x;\n                x = 0;\n            }\n            return Math.floor(Math.random() * Math.floor(y) + x);\n        } else return Math.random();\n    }\n\n    public round(number: number) {\n        return Math.round(number);\n    }\n\n    public shuffle(...numbers: Array<number>) {\n        if (Array.isArray(numbers)) {\n            const array = [];\n            numbers = Array.from(numbers);\n            while (numbers.length > 0) {\n                array.push(numbers.splice(this.random(numbers.length), 1)[0]);\n            }\n            return array;\n        } else return NaN;\n    }\n\n    public sign(number: number) {\n        return Math.sign(number);\n    }\n\n    public sin(number: number) {\n        return Math.sin(number);\n    }\n\n    public sinh(number: number) {\n        return Math.sinh(number);\n    }\n\n    public sum(...numbers: Array<number>) {\n        if (numbers.length <= 0) return NaN;\n        else return numbers.reduce((x, y) => (x += y));\n    }\n\n    public sqrt(number: number) {\n        return Math.sqrt(number);\n    }\n\n    public tan(number: number) {\n        return Math.tan(number);\n    }\n\n    public tanh(number: number) {\n        return Math.tanh(number);\n    }\n\n    public trunc(number: number) {\n        return Math.trunc(number);\n    }\n})();\n","import Math from './Math.js';\n\nexport default new (class Random {\n    constructor() {\n        this.number = this.number;\n\n        this.element = this.element;\n    }\n\n    number(min: number, max: number) {\n        if (min === undefined) return Math.random(10);\n        else return Math.random(min, max);\n    }\n\n    element(array: Array<unknown> | object) {\n        if (Array.isArray(array)) {\n            return array[Math.random(array.length)];\n        }\n\n        if (typeof array == 'object') {\n            const random = Math.random(Object.keys(array).length);\n            return {\n                object: { [Object.keys(array)[random]]: Object.values(array)[random] },\n                key: Object.keys(array)[random],\n                value: Object.values(array)[random],\n            };\n        } else return undefined;\n    }\n})();\n","export enum TextStyle {\n    Bold = 1,\n    Vague = 2,\n    Cursive = 3,\n    UnderLine = 4,\n    Transparent = 8,\n    Strike = 9,\n    DoubleUnderline = 21,\n}\n\nexport enum TextColor {\n    None = 29,\n    Grey = 30,\n    Red = 31,\n    Green = 32,\n    Yellow = 33,\n    Blue = 34,\n    Purple = 35,\n    Cyan = 36,\n    Blanche = 37,\n    LightGrey = 90,\n    LightRed = 91,\n    LightGreen = 92,\n    LightYellow = 93,\n    LightBlue = 94,\n    Violet = 95,\n    Turquoise = 96,\n    White = 97,\n}\n\nexport enum BackgroundColor {\n    None = 39,\n    Grey = 40,\n    Red = 41,\n    Green = 42,\n    Yellow = 43,\n    Blue = 44,\n    Purple = 45,\n    Cyan = 46,\n    Blanche = 47,\n    LightGrey = 100,\n    LightRed = 101,\n    LightGreen = 102,\n    LightYellow = 103,\n    LightBlue = 104,\n    Violet = 105,\n    Turquoise = 106,\n    White = 107,\n}\n\nexport default new (class Style {\n    TextStyle: typeof TextStyle;\n    TextColor: typeof TextColor;\n    BackgroundColor: typeof BackgroundColor;\n\n    constructor() {\n        this.TextStyle = TextStyle;\n\n        this.TextColor = TextColor;\n\n        this.BackgroundColor = BackgroundColor;\n    }\n\n    titleCase(string: string, lowercase: boolean = false) {\n        if (lowercase == true) string = string?.toString()?.toLowerCase();\n        return string\n            ?.toString()\n            ?.split(/ +/g)\n            ?.map((word) => word?.slice(0, 1).toUpperCase() + word?.slice(1))\n            .join(' ');\n    }\n\n    pascalCase(string: string, lowercase: boolean = false) {\n        if (lowercase == true) string = string?.toString()?.toLowerCase();\n        return string\n            ?.toString()\n            ?.split(/ +/g)\n            ?.map((word) => word?.slice(0, 1).toUpperCase() + word?.slice(1))\n            .join('');\n    }\n\n    stringCase(string: string, lowercase: boolean = false) {\n        if (lowercase == true) string = string?.toString()?.toLowerCase();\n        return string?.toString()?.charAt(0)?.toUpperCase() + string?.toString()?.slice(1);\n    }\n\n    phraseCase(string: string, lowercase: boolean = false) {\n        if (lowercase == true) string = string?.toString()?.toLowerCase();\n        return string\n            ?.toString()\n            ?.split(/[!?.]/gi)\n            .map((phrase) => phrase?.toString().charAt(0)?.toUpperCase() + phrase?.toString()?.slice(1))\n            .join(' ');\n    }\n\n    log(text: string, options: LogOptions) {\n        const styling = { color: '', style: '' };\n\n        if (options?.color) styling.color = `\\u001b[${options.color}m`;\n\n        if (options?.style) styling.style = `\\u001b[${options.style}m`;\n\n        return `${styling.color}${styling.style}${text}\\u001b[0;0m`;\n    }\n})();\n\nexport interface LogOptions {\n    style?: TextStyle;\n    color?: BackgroundColor | TextColor;\n}\n","/** @format */\r\n\r\n/**\r\n * This function catches and handles errors from a synchronous operation.\r\n *\r\n * @template T - The type of the value to be processed.\r\n * @param {T} t - The value to catch errors from.\r\n * @returns {[undefined, T] | [Error, null]} - An array containing either:\r\n * - `undefined` and the original value `t`, if no error occurred.\r\n * - An `Error` object and `null`, if an error occurred during the operation.\r\n *\r\n * @example\r\n * ```typescript\r\n * const result = catchErrorSync(fetchDataFromAPI());\r\n * if (result[0]) {\r\n *   console.error('An error occurred:', result[0]);\r\n * } else {\r\n *   console.log('Data received:', result[1]);\r\n * }\r\n * ```\r\n */\r\nexport function catchErrorSync<T>(t: T): [undefined, T] | [Error, null] {\r\n\tif (!t) return [new Error('No value provided.'), null]; //-\r\n\r\n\ttry {\r\n\t\treturn [undefined, t];\r\n\t} catch (error) {\r\n\t\treturn [error as Error, null];\r\n\t}\r\n}\r\n\r\n/**\r\n * This function catches and handles errors from an asynchronous promise.\r\n *\r\n * @template T - The type of the promise's resolved value.\r\n * @param {Promise<T>} promise - The promise to catch errors from.\r\n * @returns {Promise<[undefined, T] | [Error, null]>} - A promise that resolves to either:\r\n * - An array containing `undefined` and the resolved value of the promise, if no error occurred.\r\n * - An array containing an `Error` object and `null`, if an error occurred during the promise execution.\r\n *\r\n * @example\r\n * ```typescript\r\n * const promise = fetch('https://api.example.com/data');\r\n * catchError(promise)\r\n *   .then(([error, data]) => {\r\n *     if (error) {\r\n *       console.error('An error occurred:', error);\r\n *     } else {\r\n *       console.log('Data received:', data);\r\n *     }\r\n *   });\r\n * ```\r\n */\r\nexport async function catchError<T>(promise: Promise<T>): Promise<[undefined, T] | [Error, null]> {\r\n\tif (!promise) return [new Error('No value provided.'), null];\r\n\r\n\treturn promise\r\n\t\t.then((data) => {\r\n\t\t\treturn [undefined, data] as [undefined, T];\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\treturn [error as Error, null];\r\n\t\t});\r\n}\r\n","/** @format */\n\nimport Math from './models/Math.js';\nimport Random from './models/Random.js';\nimport Style from './models/Style.js';\nexport * from './models/Catch.js';\n\nexport default {\n\tMath,\n\tRandom,\n\tStyle,\n};\n\nexport { Math, Random, Style };\n"]}